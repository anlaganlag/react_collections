{"ast":null,"code":"var _jsxFileName = \"/home/gal/Desktop/projects/react_learn_daily/mars-weather-app/weiben-mars-weather - FINISHED/src/App.js\";\nimport React, { useState, useEffect } from 'react'; // Helpers\n\nimport { formatDate } from './helpers'; // API\n\nimport { API_URL } from './api'; // Components\n\nimport WeatherData from './components/WeatherData';\nimport Info from './components/Info';\nimport Unit from './components/Unit';\nimport Previous from './components/Previous'; // Img\n\nimport BGImage from './img/mars.jpg'; // Styles\n\nimport { AppWrapper, GlobalStyle, MarsWeather, InfoWrapper } from './App.styles';\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState([]);\n  const [selectedSol, setSelectedSol] = useState();\n  const [metric, setMetric] = useState(true);\n  const [previous, setPrevious] = useState(false);\n  console.log(weather);\n  useEffect(() => {\n    const fetchFromAPI = async () => {\n      var _weather$sol_keys;\n\n      const weather = await (await fetch(API_URL)).json();\n      const marsWeather = weather === null || weather === void 0 ? void 0 : (_weather$sol_keys = weather.sol_keys) === null || _weather$sol_keys === void 0 ? void 0 : _weather$sol_keys.map(solKey => {\n        var _weather$solKey$AT, _weather$solKey$AT2, _weather$solKey$HWS, _weather$solKey$WD, _weather$solKey$WD$mo;\n\n        return {\n          sol: solKey,\n          maxTemp: ((_weather$solKey$AT = weather[solKey].AT) === null || _weather$solKey$AT === void 0 ? void 0 : _weather$solKey$AT.mx) || '無數據',\n          minTemp: ((_weather$solKey$AT2 = weather[solKey].AT) === null || _weather$solKey$AT2 === void 0 ? void 0 : _weather$solKey$AT2.mn) || '無數據',\n          windSpeed: Math.round(((_weather$solKey$HWS = weather[solKey].HWS) === null || _weather$solKey$HWS === void 0 ? void 0 : _weather$solKey$HWS.av) || 0),\n          windDirectionDegrees: ((_weather$solKey$WD = weather[solKey].WD) === null || _weather$solKey$WD === void 0 ? void 0 : (_weather$solKey$WD$mo = _weather$solKey$WD.most_common) === null || _weather$solKey$WD$mo === void 0 ? void 0 : _weather$solKey$WD$mo.compass_degrees) || 0,\n          date: formatDate(new Date(weather[solKey].First_UTC))\n        };\n      });\n      setWeather(marsWeather);\n      setSelectedSol(marsWeather.length - 1);\n      setLoading(false);\n    };\n\n    fetchFromAPI();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyle, {\n    bgImage: BGImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MarsWeather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"main-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Latest weather at Elysium Plantitia\"), /*#__PURE__*/React.createElement(WeatherData, {\n    sol: weather[selectedSol],\n    isMetric: metric,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Unit, {\n    metric: metric,\n    setMetric: setMetric,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Previous, {\n    weather: weather,\n    previous: previous,\n    setPrevious: setPrevious,\n    setSelectedSol: setSelectedSol,\n    isMetric: metric,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/gal/Desktop/projects/react_learn_daily/mars-weather-app/weiben-mars-weather - FINISHED/src/App.js"],"names":["React","useState","useEffect","formatDate","API_URL","WeatherData","Info","Unit","Previous","BGImage","AppWrapper","GlobalStyle","MarsWeather","InfoWrapper","App","loading","setLoading","weather","setWeather","selectedSol","setSelectedSol","metric","setMetric","previous","setPrevious","console","log","fetchFromAPI","fetch","json","marsWeather","sol_keys","map","solKey","sol","maxTemp","AT","mx","minTemp","mn","windSpeed","Math","round","HWS","av","windDirectionDegrees","WD","most_common","compass_degrees","date","Date","First_UTC","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// Helpers\nimport { formatDate } from './helpers';\n// API\nimport { API_URL } from './api';\n// Components\nimport WeatherData from './components/WeatherData';\nimport Info from './components/Info';\nimport Unit from './components/Unit';\nimport Previous from './components/Previous';\n// Img\nimport BGImage from './img/mars.jpg';\n// Styles\nimport {\n  AppWrapper,\n  GlobalStyle,\n  MarsWeather,\n  InfoWrapper,\n} from './App.styles';\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [weather, setWeather] = useState([]);\n  const [selectedSol, setSelectedSol] = useState();\n  const [metric, setMetric] = useState(true);\n  const [previous, setPrevious] = useState(false);\n  console.log(weather);\n\n  useEffect(() => {\n    const fetchFromAPI = async () => {\n      const weather = await (await fetch(API_URL)).json();\n      const marsWeather = weather?.sol_keys?.map((solKey) => {\n        return {\n          sol: solKey,\n          maxTemp: weather[solKey].AT?.mx || '無數據',\n          minTemp: weather[solKey].AT?.mn || '無數據',\n          windSpeed: Math.round(weather[solKey].HWS?.av || 0),\n          windDirectionDegrees:\n            weather[solKey].WD?.most_common?.compass_degrees || 0,\n          date: formatDate(new Date(weather[solKey].First_UTC)),\n        };\n      });\n      setWeather(marsWeather);\n      setSelectedSol(marsWeather.length - 1);\n      setLoading(false);\n    };\n\n    fetchFromAPI();\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle bgImage={BGImage} />\n      <AppWrapper>\n        <MarsWeather>\n          {loading ? (\n            <div>Loading ...</div>\n          ) : (\n            <>\n              <h1 className='main-title'>\n                Latest weather at Elysium Plantitia\n              </h1>\n              <WeatherData sol={weather[selectedSol]} isMetric={metric} />\n              <InfoWrapper>\n                <Info />\n                <Unit metric={metric} setMetric={setMetric} />\n              </InfoWrapper>\n            </>\n          )}\n        </MarsWeather>\n        <Previous\n          weather={weather}\n          previous={previous}\n          setPrevious={setPrevious}\n          setSelectedSol={setSelectedSol}\n          isMetric={metric}\n        />\n      </AppWrapper>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}